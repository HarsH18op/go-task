{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample server for managing users.",
        "title": "User API",
        "contact": {},
        "version": "1.0"
    },
    "host": "localhost:8000",
    "basePath": "/",
    "paths": {
        "/api/users": {
            "get": {
                "description": "Returns a list of all users",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.GetUserResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponseModel"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a user with provided information",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequestModel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserResponseModel"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponseModel"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/models.ErrorResponseModel"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateUserRequestModel": {
            "type": "object",
            "required": [
                "email",
                "mobile_number",
                "name",
                "pancard"
            ],
            "properties": {
                "age": {
                    "description": "optional",
                    "type": "integer",
                    "maximum": 120,
                    "minimum": 0
                },
                "bio": {
                    "description": "optional",
                    "type": "string"
                },
                "birthday": {
                    "description": "optional, omitempty omits validations if it has no value",
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "mobile_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pancard": {
                    "type": "string"
                }
            }
        },
        "models.CreateUserResponseModel": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "bio": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mobile_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pancard": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        },
        "models.ErrorResponseModel": {
            "type": "object",
            "properties": {
                "errors": {
                    "description": "Optional field-level validation errors",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    }
                },
                "message": {
                    "description": "General message",
                    "type": "string"
                }
            }
        },
        "models.GetUserResponseModel": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer"
                },
                "bio": {
                    "type": "string"
                },
                "birthday": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "mobile_number": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "pancard": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                }
            }
        }
    }
}